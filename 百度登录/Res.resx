<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RSA" xml:space="preserve">
    <value>navigator = {};
window = {};

function gpd(pwd, rsakey) {
    var n = new passport.lib.RSA;
    n.setKey(rsakey);
    return encodeURIComponent(n.encrypt(pwd))
}
var passport = passport || window.passport || {};
passport = passport || {},
passport.lib = passport.lib || {},
passport.lib.RSAExport = {},

function(e) {
    function t(e, t, n) {
        null != e &amp;&amp; ("number" == typeof e ? this.fromNumber(e, t, n) : null == t &amp;&amp; "string" != typeof e ? this.fromString(e, 256) : this.fromString(e, t))
    }

    function n() {
        return new t(null)
    }

    function i(e, t, n, i, s, o) {
        for (; --o &gt;= 0;) {
            var r = t * this[e++] + n[i] + s;
            s = Math.floor(r / 67108864),
            n[i++] = 67108863 &amp; r
        }
        return s
    }

    function s(e, t, n, i, s, o) {
        for (var r = 32767 &amp; t, a = t &gt;&gt; 15; --o &gt;= 0;) {
            var c = 32767 &amp; this[e],
                l = this[e++] &gt;&gt; 15,
                u = a * c + l * r;
            c = r * c + ((32767 &amp; u) &lt;&lt; 15) + n[i] + (1073741823 &amp; s),
            s = (c &gt;&gt;&gt; 30) + (u &gt;&gt;&gt; 15) + a * l + (s &gt;&gt;&gt; 30),
            n[i++] = 1073741823 &amp; c
        }
        return s
    }

    function o(e, t, n, i, s, o) {
        for (var r = 16383 &amp; t, a = t &gt;&gt; 14; --o &gt;= 0;) {
            var c = 16383 &amp; this[e],
                l = this[e++] &gt;&gt; 14,
                u = a * c + l * r;
            c = r * c + ((16383 &amp; u) &lt;&lt; 14) + n[i] + s,
            s = (c &gt;&gt; 28) + (u &gt;&gt; 14) + a * l,
            n[i++] = 268435455 &amp; c
        }
        return s
    }

    function r(e) {
        return kn.charAt(e)
    }

    function a(e, t) {
        var n = Ln[e.charCodeAt(t)];
        return null == n ? -1 : n
    }

    function c(e) {
        for (var t = this.t - 1; t &gt;= 0; --t)
        e[t] = this[t];
        e.t = this.t,
        e.s = this.s
    }

    function l(e) {
        this.t = 1,
        this.s = 0 &gt; e ? -1 : 0,
        e &gt; 0 ? this[0] = e : -1 &gt; e ? this[0] = e + DV : this.t = 0
    }

    function u(e) {
        var t = n();
        return t.fromInt(e),
        t
    }

    function d(e, n) {
        var i;
        if (16 == n) i = 4;
        else if (8 == n) i = 3;
        else if (256 == n) i = 8;
        else if (2 == n) i = 1;
        else if (32 == n) i = 5;
        else {
            if (4 != n) return void this.fromRadix(e, n);
            i = 2
        }
        this.t = 0,
        this.s = 0;
        for (var s = e.length, o = !1, r = 0; --s &gt;= 0;) {
            var c = 8 == i ? 255 &amp; e[s] : a(e, s);
            0 &gt; c ? "-" == e.charAt(s) &amp;&amp; (o = !0) : (o = !1,
            0 == r ? this[this.t++] = c : r + i &gt; this.DB ? (this[this.t - 1] |= (c &amp; (1 &lt;&lt; this.DB - r) - 1) &lt;&lt; r,
            this[this.t++] = c &gt;&gt; this.DB - r) : this[this.t - 1] |= c &lt;&lt; r,
            r += i,
            r &gt;= this.DB &amp;&amp; (r -= this.DB))
        }
        8 == i &amp;&amp; 0 != (128 &amp; e[0]) &amp;&amp; (this.s = -1,
        r &gt; 0 &amp;&amp; (this[this.t - 1] |= (1 &lt;&lt; this.DB - r) - 1 &lt;&lt; r)),
        this.clamp(),
        o &amp;&amp; t.ZERO.subTo(this, this)
    }

    function p() {
        for (var e = this.s &amp; this.DM; this.t &gt; 0 &amp;&amp; this[this.t - 1] == e;)--this.t
    }

    function g(e) {
        if (this.s &lt; 0) return "-" + this.negate().toString(e);
        var t;
        if (16 == e) t = 4;
        else if (8 == e) t = 3;
        else if (2 == e) t = 1;
        else if (32 == e) t = 5;
        else {
            if (4 != e) return this.toRadix(e);
            t = 2
        }
        var n, i = (1 &lt;&lt; t) - 1,
            s = !1,
            o = "",
            a = this.t,
            c = this.DB - a * this.DB % t;
        if (a-- &gt; 0) for (c &lt; this.DB &amp;&amp; (n = this[a] &gt;&gt; c) &gt; 0 &amp;&amp; (s = !0,
        o = r(n)); a &gt;= 0;)
        t &gt; c ? (n = (this[a] &amp; (1 &lt;&lt; c) - 1) &lt;&lt; t - c,
        n |= this[--a] &gt;&gt; (c += this.DB - t)) : (n = this[a] &gt;&gt; (c -= t) &amp; i,
        0 &gt;= c &amp;&amp; (c += this.DB, --a)),
        n &gt; 0 &amp;&amp; (s = !0),
        s &amp;&amp; (o += r(n));
        return s ? o : "0"
    }

    function h() {
        var e = n();
        return t.ZERO.subTo(this, e),
        e
    }

    function f() {
        return this.s &lt; 0 ? this.negate() : this
    }

    function m(e) {
        var t = this.s - e.s;
        if (0 != t) return t;
        var n = this.t;
        if (t = n - e.t,
        0 != t) return this.s &lt; 0 ? -t : t;
        for (; --n &gt;= 0;)
        if (0 != (t = this[n] - e[n])) return t;
        return 0
    }

    function b(e) {
        var t, n = 1;
        return 0 != (t = e &gt;&gt;&gt; 16) &amp;&amp; (e = t,
        n += 16),
        0 != (t = e &gt;&gt; 8) &amp;&amp; (e = t,
        n += 8),
        0 != (t = e &gt;&gt; 4) &amp;&amp; (e = t,
        n += 4),
        0 != (t = e &gt;&gt; 2) &amp;&amp; (e = t,
        n += 2),
        0 != (t = e &gt;&gt; 1) &amp;&amp; (e = t,
        n += 1),
        n
    }

    function y() {
        return this.t &lt;= 0 ? 0 : this.DB * (this.t - 1) + b(this[this.t - 1] ^ this.s &amp; this.DM)
    }

    function _(e, t) {
        var n;
        for (n = this.t - 1; n &gt;= 0; --n)
        t[n + e] = this[n];
        for (n = e - 1; n &gt;= 0; --n)
        t[n] = 0;
        t.t = this.t + e,
        t.s = this.s
    }

    function E(e, t) {
        for (var n = e; n &lt; this.t; ++n)
        t[n - e] = this[n];
        t.t = Math.max(this.t - e, 0),
        t.s = this.s
    }

    function C(e, t) {
        var n, i = e % this.DB,
            s = this.DB - i,
            o = (1 &lt;&lt; s) - 1,
            r = Math.floor(e / this.DB),
            a = this.s &lt;&lt; i &amp; this.DM;
        for (n = this.t - 1; n &gt;= 0; --n)
        t[n + r + 1] = this[n] &gt;&gt; s | a,
        a = (this[n] &amp; o) &lt;&lt; i;
        for (n = r - 1; n &gt;= 0; --n)
        t[n] = 0;
        t[r] = a,
        t.t = this.t + r + 1,
        t.s = this.s,
        t.clamp()
    }

    function w(e, t) {
        t.s = this.s;
        var n = Math.floor(e / this.DB);
        if (n &gt;= this.t) return void(t.t = 0);
        var i = e % this.DB,
            s = this.DB - i,
            o = (1 &lt;&lt; i) - 1;
        t[0] = this[n] &gt;&gt; i;
        for (var r = n + 1; r &lt; this.t; ++r)
        t[r - n - 1] |= (this[r] &amp; o) &lt;&lt; s,
        t[r - n] = this[r] &gt;&gt; i;
        i &gt; 0 &amp;&amp; (t[this.t - n - 1] |= (this.s &amp; o) &lt;&lt; s),
        t.t = this.t - n,
        t.clamp()
    }

    function S(e, t) {
        for (var n = 0, i = 0, s = Math.min(e.t, this.t); s &gt; n;)
        i += this[n] - e[n],
        t[n++] = i &amp; this.DM,
        i &gt;&gt;= this.DB;
        if (e.t &lt; this.t) {
            for (i -= e.s; n &lt; this.t;)
            i += this[n],
            t[n++] = i &amp; this.DM,
            i &gt;&gt;= this.DB;
            i += this.s
        } else {
            for (i += this.s; n &lt; e.t;)
            i -= e[n],
            t[n++] = i &amp; this.DM,
            i &gt;&gt;= this.DB;
            i -= e.s
        }
        t.s = 0 &gt; i ? -1 : 0, -1 &gt; i ? t[n++] = this.DV + i : i &gt; 0 &amp;&amp; (t[n++] = i),
        t.t = n,
        t.clamp()
    }

    function T(e, n) {
        var i = this.abs(),
            s = e.abs(),
            o = i.t;
        for (n.t = o + s.t; --o &gt;= 0;)
        n[o] = 0;
        for (o = 0; o &lt; s.t; ++o)
        n[o + i.t] = i.am(0, s[o], n, o, 0, i.t);
        n.s = 0,
        n.clamp(),
        this.s != e.s &amp;&amp; t.ZERO.subTo(n, n)
    }

    function I(e) {
        for (var t = this.abs(), n = e.t = 2 * t.t; --n &gt;= 0;)
        e[n] = 0;
        for (n = 0; n &lt; t.t - 1; ++n) {
            var i = t.am(n, t[n], e, 2 * n, 0, 1);
            (e[n + t.t] += t.am(n + 1, 2 * t[n], e, 2 * n + 1, i, t.t - n - 1)) &gt;= t.DV &amp;&amp; (e[n + t.t] -= t.DV,
            e[n + t.t + 1] = 1)
        }
        e.t &gt; 0 &amp;&amp; (e[e.t - 1] += t.am(n, t[n], e, 2 * n, 0, 1)),
        e.s = 0,
        e.clamp()
    }

    function D(e, i, s) {
        var o = e.abs();
        if (!(o.t &lt;= 0)) {
            var r = this.abs();
            if (r.t &lt; o.t) return null != i &amp;&amp; i.fromInt(0),
            void(null != s &amp;&amp; this.copyTo(s));
            null == s &amp;&amp; (s = n());
            var a = n(),
                c = this.s,
                l = e.s,
                u = this.DB - b(o[o.t - 1]);
            u &gt; 0 ? (o.lShiftTo(u, a),
            r.lShiftTo(u, s)) : (o.copyTo(a),
            r.copyTo(s));
            var d = a.t,
                p = a[d - 1];
            if (0 != p) {
                var g = p * (1 &lt;&lt; this.F1) + (d &gt; 1 ? a[d - 2] &gt;&gt; this.F2 : 0),
                    h = this.FV / g,
                    f = (1 &lt;&lt; this.F1) / g,
                    m = 1 &lt;&lt; this.F2,
                    v = s.t,
                    y = v - d,
                    _ = null == i ? n() : i;
                for (a.dlShiftTo(y, _),
                s.compareTo(_) &gt;= 0 &amp;&amp; (s[s.t++] = 1,
                s.subTo(_, s)),
                t.ONE.dlShiftTo(d, _),
                _.subTo(a, a); a.t &lt; d;)
                a[a.t++] = 0;
                for (; --y &gt;= 0;) {
                    var E = s[--v] == p ? this.DM : Math.floor(s[v] * h + (s[v - 1] + m) * f);
                    if ((s[v] += a.am(0, E, s, y, 0, d)) &lt; E) for (a.dlShiftTo(y, _),
                    s.subTo(_, s); s[v] &lt; --E;)
                    s.subTo(_, s)
                }
                null != i &amp;&amp; (s.drShiftTo(d, i),
                c != l &amp;&amp; t.ZERO.subTo(i, i)),
                s.t = d,
                s.clamp(),
                u &gt; 0 &amp;&amp; s.rShiftTo(u, s),
                0 &gt; c &amp;&amp; t.ZERO.subTo(s, s)
            }
        }
    }

    function R(e) {
        var i = n();
        return this.abs().divRemTo(e, null, i),
        this.s &lt; 0 &amp;&amp; i.compareTo(t.ZERO) &gt; 0 &amp;&amp; e.subTo(i, i),
        i
    }

    function x(e) {
        this.m = e
    }

    function k(e) {
        return e.s &lt; 0 || e.compareTo(this.m) &gt;= 0 ? e.mod(this.m) : e
    }

    function L(e) {
        return e
    }

    function P(e) {
        e.divRemTo(this.m, null, e)
    }

    function M(e, t, n) {
        e.multiplyTo(t, n),
        this.reduce(n)
    }

    function A(e, t) {
        e.squareTo(t),
        this.reduce(t)
    }

    function B() {
        if (this.t &lt; 1) return 0;
        var e = this[0];
        if (0 == (1 &amp; e)) return 0;
        var t = 3 &amp; e;
        return t = t * (2 - (15 &amp; e) * t) &amp; 15,
        t = t * (2 - (255 &amp; e) * t) &amp; 255,
        t = t * (2 - ((65535 &amp; e) * t &amp; 65535)) &amp; 65535,
        t = t * (2 - e * t % this.DV) % this.DV,
        t &gt; 0 ? this.DV - t : -t
    }

    function V(e) {
        this.m = e,
        this.mp = e.invDigit(),
        this.mpl = 32767 &amp; this.mp,
        this.mph = this.mp &gt;&gt; 15,
        this.um = (1 &lt;&lt; e.DB - 15) - 1,
        this.mt2 = 2 * e.t
    }

    function $(e) {
        var i = n();
        return e.abs().dlShiftTo(this.m.t, i),
        i.divRemTo(this.m, null, i),
        e.s &lt; 0 &amp;&amp; i.compareTo(t.ZERO) &gt; 0 &amp;&amp; this.m.subTo(i, i),
        i
    }

    function N(e) {
        var t = n();
        return e.copyTo(t),
        this.reduce(t),
        t
    }

    function O(e) {
        for (; e.t &lt;= this.mt2;)
        e[e.t++] = 0;
        for (var t = 0; t &lt; this.m.t; ++t) {
            var n = 32767 &amp; e[t],
                i = n * this.mpl + ((n * this.mph + (e[t] &gt;&gt; 15) * this.mpl &amp; this.um) &lt;&lt; 15) &amp; e.DM;
            for (n = t + this.m.t,
            e[n] += this.m.am(0, i, e, t, 0, this.m.t); e[n] &gt;= e.DV;)
            e[n] -= e.DV,
            e[++n]++
        }
        e.clamp(),
        e.drShiftTo(this.m.t, e),
        e.compareTo(this.m) &gt;= 0 &amp;&amp; e.subTo(this.m, e)
    }

    function U(e, t) {
        e.squareTo(t),
        this.reduce(t)
    }

    function q(e, t, n) {
        e.multiplyTo(t, n),
        this.reduce(n)
    }

    function W() {
        return 0 == (this.t &gt; 0 ? 1 &amp; this[0] : this.s)
    }

    function H(e, i) {
        if (e &gt; 4294967295 || 1 &gt; e) return t.ONE;
        var s = n(),
            o = n(),
            r = i.convert(this),
            a = b(e) - 1;
        for (r.copyTo(s); --a &gt;= 0;)
        if (i.sqrTo(s, o), (e &amp; 1 &lt;&lt; a) &gt; 0) i.mulTo(o, r, s);
        else {
            var c = s;
            s = o,
            o = c
        }
        return i.revert(s)
    }

    function F(e, t) {
        var n;
        return n = 256 &gt; e || t.isEven() ? new x(t) : new V(t),
        this.exp(e, n)
    }

    function K() {
        var e = n();
        return this.copyTo(e),
        e
    }

    function j() {
        if (this.s &lt; 0) {
            if (1 == this.t) return this[0] - this.DV;
            if (0 == this.t) return -1
        } else {
            if (1 == this.t) return this[0];
            if (0 == this.t) return 0
        }
        return (this[1] &amp; (1 &lt;&lt; 32 - this.DB) - 1) &lt;&lt; this.DB | this[0]
    }

    function J() {
        return 0 == this.t ? this.s : this[0] &lt;&lt; 24 &gt;&gt; 24
    }

    function G() {
        return 0 == this.t ? this.s : this[0] &lt;&lt; 16 &gt;&gt; 16
    }

    function z(e) {
        return Math.floor(Math.LN2 * this.DB / Math.log(e))
    }

    function Z() {
        return this.s &lt; 0 ? -1 : this.t &lt;= 0 || 1 == this.t &amp;&amp; this[0] &lt;= 0 ? 0 : 1
    }

    function Y(e) {
        if (null == e &amp;&amp; (e = 10),
        0 == this.signum() || 2 &gt; e || e &gt; 36) return "0";
        var t = this.chunkSize(e),
            i = Math.pow(e, t),
            s = u(i),
            o = n(),
            r = n(),
            a = "";
        for (this.divRemTo(s, o, r); o.signum() &gt; 0;)
        a = (i + r.intValue()).toString(e).substr(1) + a,
        o.divRemTo(s, o, r);
        return r.intValue().toString(e) + a
    }

    function Q(e, n) {
        this.fromInt(0),
        null == n &amp;&amp; (n = 10);
        for (var i = this.chunkSize(n), s = Math.pow(n, i), o = !1, r = 0, c = 0, l = 0; l &lt; e.length; ++l) {
            var u = a(e, l);
            0 &gt; u ? "-" == e.charAt(l) &amp;&amp; 0 == this.signum() &amp;&amp; (o = !0) : (c = n * c + u, ++r &gt;= i &amp;&amp; (this.dMultiply(s),
            this.dAddOffset(c, 0),
            r = 0,
            c = 0))
        }
        r &gt; 0 &amp;&amp; (this.dMultiply(Math.pow(n, r)),
        this.dAddOffset(c, 0)),
        o &amp;&amp; t.ZERO.subTo(this, this)
    }

    function X(e, n, i) {
        if ("number" == typeof n) if (2 &gt; e) this.fromInt(1);
        else for (this.fromNumber(e, i),
        this.testBit(e - 1) || this.bitwiseTo(t.ONE.shiftLeft(e - 1), at, this),
        this.isEven() &amp;&amp; this.dAddOffset(1, 0); !this.isProbablePrime(n);)
        this.dAddOffset(2, 0),
        this.bitLength() &gt; e &amp;&amp; this.subTo(t.ONE.shiftLeft(e - 1), this);
        else {
            var s = new Array,
                o = 7 &amp; e;
            s.length = (e &gt;&gt; 3) + 1,
            n.nextBytes(s),
            o &gt; 0 ? s[0] &amp;= (1 &lt;&lt; o) - 1 : s[0] = 0,
            this.fromString(s, 256)
        }
    }

    function et() {
        var e = this.t,
            t = new Array;
        t[0] = this.s;
        var n, i = this.DB - e * this.DB % 8,
            s = 0;
        if (e-- &gt; 0) for (i &lt; this.DB &amp;&amp; (n = this[e] &gt;&gt; i) != (this.s &amp; this.DM) &gt;&gt; i &amp;&amp; (t[s++] = n | this.s &lt;&lt; this.DB - i); e &gt;= 0;)
        8 &gt; i ? (n = (this[e] &amp; (1 &lt;&lt; i) - 1) &lt;&lt; 8 - i,
        n |= this[--e] &gt;&gt; (i += this.DB - 8)) : (n = this[e] &gt;&gt; (i -= 8) &amp; 255,
        0 &gt;= i &amp;&amp; (i += this.DB, --e)),
        0 != (128 &amp; n) &amp;&amp; (n |= -256),
        0 == s &amp;&amp; (128 &amp; this.s) != (128 &amp; n) &amp;&amp; ++s, (s &gt; 0 || n != this.s) &amp;&amp; (t[s++] = n);
        return t
    }

    function tt(e) {
        return 0 == this.compareTo(e)
    }

    function nt(e) {
        return this.compareTo(e) &lt; 0 ? this : e
    }

    function it(e) {
        return this.compareTo(e) &gt; 0 ? this : e
    }

    function st(e, t, n) {
        var i, s, o = Math.min(e.t, this.t);
        for (i = 0; o &gt; i; ++i)
        n[i] = t(this[i], e[i]);
        if (e.t &lt; this.t) {
            for (s = e.s &amp; this.DM,
            i = o; i &lt; this.t; ++i)
            n[i] = t(this[i], s);
            n.t = this.t
        } else {
            for (s = this.s &amp; this.DM,
            i = o; i &lt; e.t; ++i)
            n[i] = t(s, e[i]);
            n.t = e.t
        }
        n.s = t(this.s, e.s),
        n.clamp()
    }

    function ot(e, t) {
        return e &amp; t
    }

    function rt(e) {
        var t = n();
        return this.bitwiseTo(e, ot, t),
        t
    }

    function at(e, t) {
        return e | t
    }

    function ct(e) {
        var t = n();
        return this.bitwiseTo(e, at, t),
        t
    }

    function lt(e, t) {
        return e ^ t
    }

    function ut(e) {
        var t = n();
        return this.bitwiseTo(e, lt, t),
        t
    }

    function dt(e, t) {
        return e &amp; ~t
    }

    function pt(e) {
        var t = n();
        return this.bitwiseTo(e, dt, t),
        t
    }

    function gt() {
        for (var e = n(), t = 0; t &lt; this.t; ++t)
        e[t] = this.DM &amp; ~this[t];
        return e.t = this.t,
        e.s = ~this.s,
        e
    }

    function ht(e) {
        var t = n();
        return 0 &gt; e ? this.rShiftTo(-e, t) : this.lShiftTo(e, t),
        t
    }

    function ft(e) {
        var t = n();
        return 0 &gt; e ? this.lShiftTo(-e, t) : this.rShiftTo(e, t),
        t
    }

    function mt(e) {
        if (0 == e) return -1;
        var t = 0;
        return 0 == (65535 &amp; e) &amp;&amp; (e &gt;&gt;= 16,
        t += 16),
        0 == (255 &amp; e) &amp;&amp; (e &gt;&gt;= 8,
        t += 8),
        0 == (15 &amp; e) &amp;&amp; (e &gt;&gt;= 4,
        t += 4),
        0 == (3 &amp; e) &amp;&amp; (e &gt;&gt;= 2,
        t += 2),
        0 == (1 &amp; e) &amp;&amp; ++t,
        t
    }

    function vt() {
        for (var e = 0; e &lt; this.t; ++e)
        if (0 != this[e]) return e * this.DB + mt(this[e]);
        return this.s &lt; 0 ? this.t * this.DB : -1
    }

    function bt(e) {
        for (var t = 0; 0 != e;)
        e &amp;= e - 1, ++t;
        return t
    }

    function yt() {
        for (var e = 0, t = this.s &amp; this.DM, n = 0; n &lt; this.t; ++n)
        e += bt(this[n] ^ t);
        return e
    }

    function _t(e) {
        var t = Math.floor(e / this.DB);
        return t &gt;= this.t ? 0 != this.s : 0 != (this[t] &amp; 1 &lt;&lt; e % this.DB)
    }

    function Et(e, n) {
        var i = t.ONE.shiftLeft(e);
        return this.bitwiseTo(i, n, i),
        i
    }

    function Ct(e) {
        return this.changeBit(e, at)
    }

    function wt(e) {
        return this.changeBit(e, dt)
    }

    function St(e) {
        return this.changeBit(e, lt)
    }

    function Tt(e, t) {
        for (var n = 0, i = 0, s = Math.min(e.t, this.t); s &gt; n;)
        i += this[n] + e[n],
        t[n++] = i &amp; this.DM,
        i &gt;&gt;= this.DB;
        if (e.t &lt; this.t) {
            for (i += e.s; n &lt; this.t;)
            i += this[n],
            t[n++] = i &amp; this.DM,
            i &gt;&gt;= this.DB;
            i += this.s
        } else {
            for (i += this.s; n &lt; e.t;)
            i += e[n],
            t[n++] = i &amp; this.DM,
            i &gt;&gt;= this.DB;
            i += e.s
        }
        t.s = 0 &gt; i ? -1 : 0,
        i &gt; 0 ? t[n++] = i : -1 &gt; i &amp;&amp; (t[n++] = this.DV + i),
        t.t = n,
        t.clamp()
    }

    function It(e) {
        var t = n();
        return this.addTo(e, t),
        t
    }

    function Dt(e) {
        var t = n();
        return this.subTo(e, t),
        t
    }

    function Rt(e) {
        var t = n();
        return this.multiplyTo(e, t),
        t
    }

    function xt() {
        var e = n();
        return this.squareTo(e),
        e
    }

    function kt(e) {
        var t = n();
        return this.divRemTo(e, t, null),
        t
    }

    function Lt(e) {
        var t = n();
        return this.divRemTo(e, null, t),
        t
    }

    function Pt(e) {
        var t = n(),
            i = n();
        return this.divRemTo(e, t, i),
        new Array(t, i)
    }

    function Mt(e) {
        this[this.t] = this.am(0, e - 1, this, 0, 0, this.t), ++this.t,
        this.clamp()
    }

    function At(e, t) {
        if (0 != e) {
            for (; this.t &lt;= t;)
            this[this.t++] = 0;
            for (this[t] += e; this[t] &gt;= this.DV;)
            this[t] -= this.DV, ++t &gt;= this.t &amp;&amp; (this[this.t++] = 0), ++this[t]
        }
    }

    function Bt() {}

    function Vt(e) {
        return e
    }

    function $t(e, t, n) {
        e.multiplyTo(t, n)
    }

    function Nt(e, t) {
        e.squareTo(t)
    }

    function Ot(e) {
        return this.exp(e, new Bt)
    }

    function Ut(e, t, n) {
        var i = Math.min(this.t + e.t, t);
        for (n.s = 0,
        n.t = i; i &gt; 0;)
        n[--i] = 0;
        var s;
        for (s = n.t - this.t; s &gt; i; ++i)
        n[i + this.t] = this.am(0, e[i], n, i, 0, this.t);
        for (s = Math.min(e.t, t); s &gt; i; ++i)
        this.am(0, e[i], n, i, 0, t - i);
        n.clamp()
    }

    function qt(e, t, n) {
        --t;
        var i = n.t = this.t + e.t - t;
        for (n.s = 0; --i &gt;= 0;)
        n[i] = 0;
        for (i = Math.max(t - this.t, 0); i &lt; e.t; ++i)
        n[this.t + i - t] = this.am(t - i, e[i], n, 0, 0, this.t + i - t);
        n.clamp(),
        n.drShiftTo(1, n)
    }

    function Wt(e) {
        this.r2 = n(),
        this.q3 = n(),
        t.ONE.dlShiftTo(2 * e.t, this.r2),
        this.mu = this.r2.divide(e),
        this.m = e
    }

    function Ht(e) {
        if (e.s &lt; 0 || e.t &gt; 2 * this.m.t) return e.mod(this.m);
        if (e.compareTo(this.m) &lt; 0) return e;
        var t = n();
        return e.copyTo(t),
        this.reduce(t),
        t
    }

    function Ft(e) {
        return e
    }

    function Kt(e) {
        for (e.drShiftTo(this.m.t - 1, this.r2),
        e.t &gt; this.m.t + 1 &amp;&amp; (e.t = this.m.t + 1,
        e.clamp()),
        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3),
        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2); e.compareTo(this.r2) &lt; 0;)
        e.dAddOffset(1, this.m.t + 1);
        for (e.subTo(this.r2, e); e.compareTo(this.m) &gt;= 0;)
        e.subTo(this.m, e)
    }

    function jt(e, t) {
        e.squareTo(t),
        this.reduce(t)
    }

    function Jt(e, t, n) {
        e.multiplyTo(t, n),
        this.reduce(n)
    }

    function Gt(e, t) {
        var i, s, o = e.bitLength(),
            r = u(1);
        if (0 &gt;= o) return r;
        i = 18 &gt; o ? 1 : 48 &gt; o ? 3 : 144 &gt; o ? 4 : 768 &gt; o ? 5 : 6,
        s = 8 &gt; o ? new x(t) : t.isEven() ? new Wt(t) : new V(t);
        var a = new Array,
            c = 3,
            l = i - 1,
            d = (1 &lt;&lt; i) - 1;
        if (a[1] = s.convert(this),
        i &gt; 1) {
            var p = n();
            for (s.sqrTo(a[1], p); d &gt;= c;)
            a[c] = n(),
            s.mulTo(p, a[c - 2], a[c]),
            c += 2
        }
        var g, h, f = e.t - 1,
            m = !0,
            v = n();
        for (o = b(e[f]) - 1; f &gt;= 0;) {
            for (o &gt;= l ? g = e[f] &gt;&gt; o - l &amp; d : (g = (e[f] &amp; (1 &lt;&lt; o + 1) - 1) &lt;&lt; l - o,
            f &gt; 0 &amp;&amp; (g |= e[f - 1] &gt;&gt; this.DB + o - l)),
            c = i; 0 == (1 &amp; g);)
            g &gt;&gt;= 1, --c;
            if ((o -= c) &lt; 0 &amp;&amp; (o += this.DB, --f),
            m) a[g].copyTo(r),
            m = !1;
            else {
                for (; c &gt; 1;)
                s.sqrTo(r, v),
                s.sqrTo(v, r),
                c -= 2;
                c &gt; 0 ? s.sqrTo(r, v) : (h = r,
                r = v,
                v = h),
                s.mulTo(v, a[g], r)
            }
            for (; f &gt;= 0 &amp;&amp; 0 == (e[f] &amp; 1 &lt;&lt; o);)
            s.sqrTo(r, v),
            h = r,
            r = v,
            v = h, --o &lt; 0 &amp;&amp; (o = this.DB - 1, --f)
        }
        return s.revert(r)
    }

    function zt(e) {
        var t = this.s &lt; 0 ? this.negate() : this.clone(),
            n = e.s &lt; 0 ? e.negate() : e.clone();
        if (t.compareTo(n) &lt; 0) {
            var i = t;
            t = n,
            n = i
        }
        var s = t.getLowestSetBit(),
            o = n.getLowestSetBit();
        if (0 &gt; o) return t;
        for (o &gt; s &amp;&amp; (o = s),
        o &gt; 0 &amp;&amp; (t.rShiftTo(o, t),
        n.rShiftTo(o, n)); t.signum() &gt; 0;)
        (s = t.getLowestSetBit()) &gt; 0 &amp;&amp; t.rShiftTo(s, t), (s = n.getLowestSetBit()) &gt; 0 &amp;&amp; n.rShiftTo(s, n),
        t.compareTo(n) &gt;= 0 ? (t.subTo(n, t),
        t.rShiftTo(1, t)) : (n.subTo(t, n),
        n.rShiftTo(1, n));
        return o &gt; 0 &amp;&amp; n.lShiftTo(o, n),
        n
    }

    function Zt(e) {
        if (0 &gt;= e) return 0;
        var t = this.DV % e,
            n = this.s &lt; 0 ? e - 1 : 0;
        if (this.t &gt; 0) if (0 == t) n = this[0] % e;
        else for (var i = this.t - 1; i &gt;= 0; --i)
        n = (t * n + this[i]) % e;
        return n
    }

    function Yt(e) {
        var n = e.isEven();
        if (this.isEven() &amp;&amp; n || 0 == e.signum()) return t.ZERO;
        for (var i = e.clone(), s = this.clone(), o = u(1), r = u(0), a = u(0), c = u(1); 0 != i.signum();) {
            for (; i.isEven();)
            i.rShiftTo(1, i),
            n ? (o.isEven() &amp;&amp; r.isEven() || (o.addTo(this, o),
            r.subTo(e, r)),
            o.rShiftTo(1, o)) : r.isEven() || r.subTo(e, r),
            r.rShiftTo(1, r);
            for (; s.isEven();)
            s.rShiftTo(1, s),
            n ? (a.isEven() &amp;&amp; c.isEven() || (a.addTo(this, a),
            c.subTo(e, c)),
            a.rShiftTo(1, a)) : c.isEven() || c.subTo(e, c),
            c.rShiftTo(1, c);
            i.compareTo(s) &gt;= 0 ? (i.subTo(s, i),
            n &amp;&amp; o.subTo(a, o),
            r.subTo(c, r)) : (s.subTo(i, s),
            n &amp;&amp; a.subTo(o, a),
            c.subTo(r, c))
        }
        return 0 != s.compareTo(t.ONE) ? t.ZERO : c.compareTo(e) &gt;= 0 ? c.subtract(e) : c.signum() &lt; 0 ? (c.addTo(e, c),
        c.signum() &lt; 0 ? c.add(e) : c) : c
    }

    function Qt(e) {
        var t, n = this.abs();
        if (1 == n.t &amp;&amp; n[0] &lt;= Pn[Pn.length - 1]) {
            for (t = 0; t &lt; Pn.length; ++t)
            if (n[0] == Pn[t]) return !0;
            return !1
        }
        if (n.isEven()) return !1;
        for (t = 1; t &lt; Pn.length;) {
            for (var i = Pn[t], s = t + 1; s &lt; Pn.length &amp;&amp; Mn &gt; i;)
            i *= Pn[s++];
            for (i = n.modInt(i); s &gt; t;)
            if (i % Pn[t++] == 0) return !1
        }
        return n.millerRabin(e)
    }

    function Xt(e) {
        var i = this.subtract(t.ONE),
            s = i.getLowestSetBit();
        if (0 &gt;= s) return !1;
        var o = i.shiftRight(s);
        e = e + 1 &gt;&gt; 1,
        e &gt; Pn.length &amp;&amp; (e = Pn.length);
        for (var r = n(), a = 0; e &gt; a; ++a) {
            r.fromInt(Pn[Math.floor(Math.random() * Pn.length)]);
            var c = r.modPow(o, this);
            if (0 != c.compareTo(t.ONE) &amp;&amp; 0 != c.compareTo(i)) {
                for (var l = 1; l++ &lt; s &amp;&amp; 0 != c.compareTo(i);)
                if (c = c.modPowInt(2, this),
                0 == c.compareTo(t.ONE)) return !1;
                if (0 != c.compareTo(i)) return !1
            }
        }
        return !0
    }

    function en() {
        this.i = 0,
        this.j = 0,
        this.S = new Array
    }

    function tn(e) {
        var t, n, i;
        for (t = 0; 256 &gt; t; ++t)
        this.S[t] = t;
        for (n = 0,
        t = 0; 256 &gt; t; ++t)
        n = n + this.S[t] + e[t % e.length] &amp; 255,
        i = this.S[t],
        this.S[t] = this.S[n],
        this.S[n] = i;
        this.i = 0,
        this.j = 0
    }

    function nn() {
        var e;
        return this.i = this.i + 1 &amp; 255,
        this.j = this.j + this.S[this.i] &amp; 255,
        e = this.S[this.i],
        this.S[this.i] = this.S[this.j],
        this.S[this.j] = e,
        this.S[e + this.S[this.i] &amp; 255]
    }

    function sn() {
        return new en
    }

    function on(e) {
        Bn[Vn++] ^= 255 &amp; e,
        Bn[Vn++] ^= e &gt;&gt; 8 &amp; 255,
        Bn[Vn++] ^= e &gt;&gt; 16 &amp; 255,
        Bn[Vn++] ^= e &gt;&gt; 24 &amp; 255,
        Vn &gt;= $n &amp;&amp; (Vn -= $n)
    }

    function rn() {
        on((new Date).getTime())
    }

    function an() {
        if (null == An) {
            for (rn(),
            An = sn(),
            An.init(Bn),
            Vn = 0; Vn &lt; Bn.length; ++Vn)
            Bn[Vn] = 0;
            Vn = 0
        }
        return An.next()
    }

    function cn(e) {
        var t;
        for (t = 0; t &lt; e.length; ++t)
        e[t] = an()
    }

    function ln() {}

    function un(e, n) {
        return new t(e, n)
    }

    function dn(e, n) {
        if (n &lt; e.length + 11) return console.error("Message too long for RSA"),
        null;
        for (var i = new Array, s = e.length - 1; s &gt;= 0 &amp;&amp; n &gt; 0;) {
            var o = e.charCodeAt(s--);
            128 &gt; o ? i[--n] = o : o &gt; 127 &amp;&amp; 2048 &gt; o ? (i[--n] = 63 &amp; o | 128,
            i[--n] = o &gt;&gt; 6 | 192) : (i[--n] = 63 &amp; o | 128,
            i[--n] = o &gt;&gt; 6 &amp; 63 | 128,
            i[--n] = o &gt;&gt; 12 | 224)
        }
        i[--n] = 0;
        for (var r = new ln, a = new Array; n &gt; 2;) {
            for (a[0] = 0; 0 == a[0];)
            r.nextBytes(a);
            i[--n] = a[0]
        }
        return i[--n] = 2,
        i[--n] = 0,
        new t(i)
    }

    function pn() {
        this.n = null,
        this.e = 0,
        this.d = null,
        this.p = null,
        this.q = null,
        this.dmp1 = null,
        this.dmq1 = null,
        this.coeff = null
    }

    function gn(e, t) {
        null != e &amp;&amp; null != t &amp;&amp; e.length &gt; 0 &amp;&amp; t.length &gt; 0 ? (this.n = un(e, 16),
        this.e = parseInt(t, 16)) : console.error("Invalid RSA public key")
    }

    function hn(e) {
        return e.modPowInt(this.e, this.n)
    }

    function fn(e) {
        var t = dn(e, this.n.bitLength() + 7 &gt;&gt; 3);
        if (null == t) return null;
        var n = this.doPublic(t);
        if (null == n) return null;
        var i = n.toString(16);
        return 0 == (1 &amp; i.length) ? i : "0" + i
    }

    function mn(e, t) {
        for (var n = e.toByteArray(), i = 0; i &lt; n.length &amp;&amp; 0 == n[i];)++i;
        if (n.length - i != t - 1 || 2 != n[i]) return null;
        for (++i; 0 != n[i];)
        if (++i &gt;= n.length) return null;
        for (var s = ""; ++i &lt; n.length;) {
            var o = 255 &amp; n[i];
            128 &gt; o ? s += String.fromCharCode(o) : o &gt; 191 &amp;&amp; 224 &gt; o ? (s += String.fromCharCode((31 &amp; o) &lt;&lt; 6 | 63 &amp; n[i + 1]), ++i) : (s += String.fromCharCode((15 &amp; o) &lt;&lt; 12 | (63 &amp; n[i + 1]) &lt;&lt; 6 | 63 &amp; n[i + 2]),
            i += 2)
        }
        return s
    }

    function vn(e, t, n) {
        null != e &amp;&amp; null != t &amp;&amp; e.length &gt; 0 &amp;&amp; t.length &gt; 0 ? (this.n = un(e, 16),
        this.e = parseInt(t, 16),
        this.d = un(n, 16)) : console.error("Invalid RSA private key")
    }

    function bn(e, t, n, i, s, o, r, a) {
        null != e &amp;&amp; null != t &amp;&amp; e.length &gt; 0 &amp;&amp; t.length &gt; 0 ? (this.n = un(e, 16),
        this.e = parseInt(t, 16),
        this.d = un(n, 16),
        this.p = un(i, 16),
        this.q = un(s, 16),
        this.dmp1 = un(o, 16),
        this.dmq1 = un(r, 16),
        this.coeff = un(a, 16)) : console.error("Invalid RSA private key")
    }

    function yn(e, n) {
        var i = new ln,
            s = e &gt;&gt; 1;
        this.e = parseInt(n, 16);
        for (var o = new t(n, 16);;) {
            for (; this.p = new t(e - s, 1, i),
            0 != this.p.subtract(t.ONE).gcd(o).compareTo(t.ONE) || !this.p.isProbablePrime(10););
            for (; this.q = new t(s, 1, i),
            0 != this.q.subtract(t.ONE).gcd(o).compareTo(t.ONE) || !this.q.isProbablePrime(10););
            if (this.p.compareTo(this.q) &lt;= 0) {
                var r = this.p;
                this.p = this.q,
                this.q = r
            }
            var a = this.p.subtract(t.ONE),
                c = this.q.subtract(t.ONE),
                l = a.multiply(c);
            if (0 == l.gcd(o).compareTo(t.ONE)) {
                this.n = this.p.multiply(this.q),
                this.d = o.modInverse(l),
                this.dmp1 = this.d.mod(a),
                this.dmq1 = this.d.mod(c),
                this.coeff = this.q.modInverse(this.p);
                break
            }
        }
    }

    function _n(e) {
        if (null == this.p || null == this.q) return e.modPow(this.d, this.n);
        for (var t = e.mod(this.p).modPow(this.dmp1, this.p), n = e.mod(this.q).modPow(this.dmq1, this.q); t.compareTo(n) &lt; 0;)
        t = t.add(this.p);
        return t.subtract(n).multiply(this.coeff).mod(this.p).multiply(this.q).add(n)
    }

    function En(e) {
        var t = un(e, 16),
            n = this.doPrivate(t);
        return null == n ? null : mn(n, this.n.bitLength() + 7 &gt;&gt; 3)
    }

    function Cn(e) {
        var t, n, i = "";
        for (t = 0; t + 3 &lt;= e.length; t += 3)
        n = parseInt(e.substring(t, t + 3), 16),
        i += Un.charAt(n &gt;&gt; 6) + Un.charAt(63 &amp; n);
        for (t + 1 == e.length ? (n = parseInt(e.substring(t, t + 1), 16),
        i += Un.charAt(n &lt;&lt; 2)) : t + 2 == e.length &amp;&amp; (n = parseInt(e.substring(t, t + 2), 16),
        i += Un.charAt(n &gt;&gt; 2) + Un.charAt((3 &amp; n) &lt;&lt; 4));
        (3 &amp; i.length) &gt; 0;)
        i += qn;
        return i
    }

    function wn(e) {
        var t, n, i = "",
            s = 0;
        for (t = 0; t &lt; e.length &amp;&amp; e.charAt(t) != qn; ++t)
        v = Un.indexOf(e.charAt(t)),
        0 &gt; v || (0 == s ? (i += r(v &gt;&gt; 2),
        n = 3 &amp; v,
        s = 1) : 1 == s ? (i += r(n &lt;&lt; 2 | v &gt;&gt; 4),
        n = 15 &amp; v,
        s = 2) : 2 == s ? (i += r(n),
        i += r(v &gt;&gt; 2),
        n = 3 &amp; v,
        s = 3) : (i += r(n &lt;&lt; 2 | v &gt;&gt; 4),
        i += r(15 &amp; v),
        s = 0));
        return 1 == s &amp;&amp; (i += r(n &lt;&lt; 2)),
        i
    }
    var Sn, Tn = 0xdeadbeefcafe,
        In = 15715070 == (16777215 &amp; Tn);
    In &amp;&amp; "Microsoft Internet Explorer" == navigator.appName ? (t.prototype.am = s,
    Sn = 30) : In &amp;&amp; "Netscape" != navigator.appName ? (t.prototype.am = i,
    Sn = 26) : (t.prototype.am = o,
    Sn = 28),
    t.prototype.DB = Sn,
    t.prototype.DM = (1 &lt;&lt; Sn) - 1,
    t.prototype.DV = 1 &lt;&lt; Sn;
    var Dn = 52;
    t.prototype.FV = Math.pow(2, Dn),
    t.prototype.F1 = Dn - Sn,
    t.prototype.F2 = 2 * Sn - Dn;
    var Rn, xn, kn = "0123456789abcdefghijklmnopqrstuvwxyz",
        Ln = new Array;
    for (Rn = "0".charCodeAt(0),
    xn = 0; 9 &gt;= xn; ++xn)
    Ln[Rn++] = xn;
    for (Rn = "a".charCodeAt(0),
    xn = 10; 36 &gt; xn; ++xn)
    Ln[Rn++] = xn;
    for (Rn = "A".charCodeAt(0),
    xn = 10; 36 &gt; xn; ++xn)
    Ln[Rn++] = xn;
    x.prototype.convert = k,
    x.prototype.revert = L,
    x.prototype.reduce = P,
    x.prototype.mulTo = M,
    x.prototype.sqrTo = A,
    V.prototype.convert = $,
    V.prototype.revert = N,
    V.prototype.reduce = O,
    V.prototype.mulTo = q,
    V.prototype.sqrTo = U,
    t.prototype.copyTo = c,
    t.prototype.fromInt = l,
    t.prototype.fromString = d,
    t.prototype.clamp = p,
    t.prototype.dlShiftTo = _,
    t.prototype.drShiftTo = E,
    t.prototype.lShiftTo = C,
    t.prototype.rShiftTo = w,
    t.prototype.subTo = S,
    t.prototype.multiplyTo = T,
    t.prototype.squareTo = I,
    t.prototype.divRemTo = D,
    t.prototype.invDigit = B,
    t.prototype.isEven = W,
    t.prototype.exp = H,
    t.prototype.toString = g,
    t.prototype.negate = h,
    t.prototype.abs = f,
    t.prototype.compareTo = m,
    t.prototype.bitLength = y,
    t.prototype.mod = R,
    t.prototype.modPowInt = F,
    t.ZERO = u(0),
    t.ONE = u(1),
    Bt.prototype.convert = Vt,
    Bt.prototype.revert = Vt,
    Bt.prototype.mulTo = $t,
    Bt.prototype.sqrTo = Nt,
    Wt.prototype.convert = Ht,
    Wt.prototype.revert = Ft,
    Wt.prototype.reduce = Kt,
    Wt.prototype.mulTo = Jt,
    Wt.prototype.sqrTo = jt;
    var Pn = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997],
        Mn = (1 &lt;&lt; 26) / Pn[Pn.length - 1];
    t.prototype.chunkSize = z,
    t.prototype.toRadix = Y,
    t.prototype.fromRadix = Q,
    t.prototype.fromNumber = X,
    t.prototype.bitwiseTo = st,
    t.prototype.changeBit = Et,
    t.prototype.addTo = Tt,
    t.prototype.dMultiply = Mt,
    t.prototype.dAddOffset = At,
    t.prototype.multiplyLowerTo = Ut,
    t.prototype.multiplyUpperTo = qt,
    t.prototype.modInt = Zt,
    t.prototype.millerRabin = Xt,
    t.prototype.clone = K,
    t.prototype.intValue = j,
    t.prototype.byteValue = J,
    t.prototype.shortValue = G,
    t.prototype.signum = Z,
    t.prototype.toByteArray = et,
    t.prototype.equals = tt,
    t.prototype.min = nt,
    t.prototype.max = it,
    t.prototype.and = rt,
    t.prototype.or = ct,
    t.prototype.xor = ut,
    t.prototype.andNot = pt,
    t.prototype.not = gt,
    t.prototype.shiftLeft = ht,
    t.prototype.shiftRight = ft,
    t.prototype.getLowestSetBit = vt,
    t.prototype.bitCount = yt,
    t.prototype.testBit = _t,
    t.prototype.setBit = Ct,
    t.prototype.clearBit = wt,
    t.prototype.flipBit = St,
    t.prototype.add = It,
    t.prototype.subtract = Dt,
    t.prototype.multiply = Rt,
    t.prototype.divide = kt,
    t.prototype.remainder = Lt,
    t.prototype.divideAndRemainder = Pt,
    t.prototype.modPow = Gt,
    t.prototype.modInverse = Yt,
    t.prototype.pow = Ot,
    t.prototype.gcd = zt,
    t.prototype.isProbablePrime = Qt,
    t.prototype.square = xt,
    en.prototype.init = tn,
    en.prototype.next = nn;
    var An, Bn, Vn, $n = 256;
    if (null == Bn) {
        Bn = new Array,
        Vn = 0;
        var Nn;
        if ("Netscape" == navigator.appName &amp;&amp; navigator.appVersion &lt; "5" &amp;&amp; window.crypto) {
            var On = window.crypto.random(32);
            for (Nn = 0; Nn &lt; On.length; ++Nn)
            Bn[Vn++] = 255 &amp; On.charCodeAt(Nn)
        }
        for (; $n &gt; Vn;)
        Nn = Math.floor(65536 * Math.random()),
        Bn[Vn++] = Nn &gt;&gt;&gt; 8,
        Bn[Vn++] = 255 &amp; Nn;
        Vn = 0,
        rn()
    }
    ln.prototype.nextBytes = cn,
    pn.prototype.doPublic = hn,
    pn.prototype.setPublic = gn,
    pn.prototype.encrypt = fn,
    pn.prototype.doPrivate = _n,
    pn.prototype.setPrivate = vn,
    pn.prototype.setPrivateEx = bn,
    pn.prototype.generate = yn,
    pn.prototype.decrypt = En,

    function() {
        var e = function(e, i, s) {
            var o = new ln,
                r = e &gt;&gt; 1;
            this.e = parseInt(i, 16);
            var a = new t(i, 16),
                c = this,
                l = function() {
                    var i = function() {
                        if (c.p.compareTo(c.q) &lt;= 0) {
                            var e = c.p;
                            c.p = c.q,
                            c.q = e
                        }
                        var n = c.p.subtract(t.ONE),
                            i = c.q.subtract(t.ONE),
                            o = n.multiply(i);
                        0 == o.gcd(a).compareTo(t.ONE) ? (c.n = c.p.multiply(c.q),
                        c.d = a.modInverse(o),
                        c.dmp1 = c.d.mod(n),
                        c.dmq1 = c.d.mod(i),
                        c.coeff = c.q.modInverse(c.p),
                        setTimeout(function() {
                            s()
                        }, 0)) : setTimeout(l, 0)
                    }, u = function() {
                        c.q = n(),
                        c.q.fromNumberAsync(r, 1, o, function() {
                            c.q.subtract(t.ONE).gcda(a, function(e) {
                                0 == e.compareTo(t.ONE) &amp;&amp; c.q.isProbablePrime(10) ? setTimeout(i, 0) : setTimeout(u, 0)
                            })
                        })
                    }, d = function() {
                        c.p = n(),
                        c.p.fromNumberAsync(e - r, 1, o, function() {
                            c.p.subtract(t.ONE).gcda(a, function(e) {
                                0 == e.compareTo(t.ONE) &amp;&amp; c.p.isProbablePrime(10) ? setTimeout(u, 0) : setTimeout(d, 0)
                            })
                        })
                    };
                    setTimeout(d, 0)
                };
            setTimeout(l, 0)
        };
        pn.prototype.generateAsync = e;
        var i = function(e, t) {
            var n = this.s &lt; 0 ? this.negate() : this.clone(),
                i = e.s &lt; 0 ? e.negate() : e.clone();
            if (n.compareTo(i) &lt; 0) {
                var s = n;
                n = i,
                i = s
            }
            var o = n.getLowestSetBit(),
                r = i.getLowestSetBit();
            if (0 &gt; r) return void t(n);
            r &gt; o &amp;&amp; (r = o),
            r &gt; 0 &amp;&amp; (n.rShiftTo(r, n),
            i.rShiftTo(r, i));
            var a = function() {
                (o = n.getLowestSetBit()) &gt; 0 &amp;&amp; n.rShiftTo(o, n), (o = i.getLowestSetBit()) &gt; 0 &amp;&amp; i.rShiftTo(o, i),
                n.compareTo(i) &gt;= 0 ? (n.subTo(i, n),
                n.rShiftTo(1, n)) : (i.subTo(n, i),
                i.rShiftTo(1, i)),
                n.signum() &gt; 0 ? setTimeout(a, 0) : (r &gt; 0 &amp;&amp; i.lShiftTo(r, i),
                setTimeout(function() {
                    t(i)
                }, 0))
            };
            setTimeout(a, 10)
        };
        t.prototype.gcda = i;
        var s = function(e, n, i, s) {
            if ("number" == typeof n) if (2 &gt; e) this.fromInt(1);
            else {
                this.fromNumber(e, i),
                this.testBit(e - 1) || this.bitwiseTo(t.ONE.shiftLeft(e - 1), at, this),
                this.isEven() &amp;&amp; this.dAddOffset(1, 0);
                var o = this,
                    r = function() {
                        o.dAddOffset(2, 0),
                        o.bitLength() &gt; e &amp;&amp; o.subTo(t.ONE.shiftLeft(e - 1), o),
                        o.isProbablePrime(n) ? setTimeout(function() {
                            s()
                        }, 0) : setTimeout(r, 0)
                    };
                setTimeout(r, 0)
            } else {
                var a = new Array,
                    c = 7 &amp; e;
                a.length = (e &gt;&gt; 3) + 1,
                n.nextBytes(a),
                c &gt; 0 ? a[0] &amp;= (1 &lt;&lt; c) - 1 : a[0] = 0,
                this.fromString(a, 256)
            }
        };
        t.prototype.fromNumberAsync = s
    }();
    var Un = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        qn = "=",
        Wn = Wn || {};
    Wn.env = Wn.env || {};
    var Hn = Wn,
        Fn = Object.prototype,
        Kn = "[object Function]",
        jn = ["toString", "valueOf"];
    Wn.env.parseUA = function(e) {
        var t, n = function(e) {
            var t = 0;
            return parseFloat(e.replace(/\./g, function() {
                return 1 == t++ ? "" : "."
            }))
        }, i = navigator,
            s = {
                ie: 0,
                opera: 0,
                gecko: 0,
                webkit: 0,
                chrome: 0,
                mobile: null,
                air: 0,
                ipad: 0,
                iphone: 0,
                ipod: 0,
                ios: null,
                android: 0,
                webos: 0,
                caja: i &amp;&amp; i.cajaVersion,
                secure: !1,
                os: null
            }, o = e || navigator &amp;&amp; navigator.userAgent,
            r = window &amp;&amp; window.location,
            a = r &amp;&amp; r.href;
        return s.secure = a &amp;&amp; 0 === a.toLowerCase().indexOf("https"),
        o &amp;&amp; (/windows|win32/i.test(o) ? s.os = "windows" : /macintosh/i.test(o) ? s.os = "macintosh" : /rhino/i.test(o) &amp;&amp; (s.os = "rhino"),
            /KHTML/.test(o) &amp;&amp; (s.webkit = 1),
        t = o.match(/AppleWebKit\/([^\s]*)/),
        t &amp;&amp; t[1] &amp;&amp; (s.webkit = n(t[1]),
            / Mobile\//.test(o) ? (s.mobile = "Apple",
        t = o.match(/OS ([^\s]*)/),
        t &amp;&amp; t[1] &amp;&amp; (t = n(t[1].replace("_", "."))),
        s.ios = t,
        s.ipad = s.ipod = s.iphone = 0,
        t = o.match(/iPad|iPod|iPhone/),
        t &amp;&amp; t[0] &amp;&amp; (s[t[0].toLowerCase()] = s.ios)) : (t = o.match(/NokiaN[^\/]*|Android \d\.\d|webOS\/\d\.\d/),
        t &amp;&amp; (s.mobile = t[0]),
            /webOS/.test(o) &amp;&amp; (s.mobile = "WebOS",
        t = o.match(/webOS\/([^\s]*);/),
        t &amp;&amp; t[1] &amp;&amp; (s.webos = n(t[1]))),
            / Android/.test(o) &amp;&amp; (s.mobile = "Android",
        t = o.match(/Android ([^\s]*);/),
        t &amp;&amp; t[1] &amp;&amp; (s.android = n(t[1])))),
        t = o.match(/Chrome\/([^\s]*)/),
        t &amp;&amp; t[1] ? s.chrome = n(t[1]) : (t = o.match(/AdobeAIR\/([^\s]*)/),
        t &amp;&amp; (s.air = t[0]))),
        s.webkit || (t = o.match(/Opera[\s\/]([^\s]*)/),
        t &amp;&amp; t[1] ? (s.opera = n(t[1]),
        t = o.match(/Version\/([^\s]*)/),
        t &amp;&amp; t[1] &amp;&amp; (s.opera = n(t[1])),
        t = o.match(/Opera Mini[^;]*/),
        t &amp;&amp; (s.mobile = t[0])) : (t = o.match(/MSIE\s([^;]*)/),
        t &amp;&amp; t[1] ? s.ie = n(t[1]) : (t = o.match(/Gecko\/([^\s]*)/),
        t &amp;&amp; (s.gecko = 1,
        t = o.match(/rv:([^\s\)]*)/),
        t &amp;&amp; t[1] &amp;&amp; (s.gecko = n(t[1]))))))),
        s
    },
    Wn.env.ua = Wn.env.parseUA(),
    Wn.isFunction = function(e) {
        return "function" == typeof e || Fn.toString.apply(e) === Kn
    },
    Wn._IEEnumFix = Wn.env.ua.ie ? function(e, t) {
        var n, i, s;
        for (n = 0; n &lt; jn.length; n += 1)
        i = jn[n],
        s = t[i],
        Hn.isFunction(s) &amp;&amp; s != Fn[i] &amp;&amp; (e[i] = s)
    } : function() {},
    Wn.extend = function(e, t, n) {
        if (!t || !e) throw new Error("extend failed, please check that all dependencies are included.");
        var i, s = function() {};
        if (s.prototype = t.prototype,
        e.prototype = new s,
        e.prototype.constructor = e,
        e.superclass = t.prototype,
        t.prototype.constructor == Fn.constructor &amp;&amp; (t.prototype.constructor = t),
        n) {
            for (i in n)
            Hn.hasOwnProperty(n, i) &amp;&amp; (e.prototype[i] = n[i]);
            Hn._IEEnumFix(e.prototype, n)
        }
    },
        "undefined" != typeof KJUR &amp;&amp; KJUR || (KJUR = {}),
        "undefined" != typeof KJUR.asn1 &amp;&amp; KJUR.asn1 || (KJUR.asn1 = {}),
    KJUR.asn1.ASN1Util = new function() {
        this.integerToByteHex = function(e) {
            var t = e.toString(16);
            return t.length % 2 == 1 &amp;&amp; (t = "0" + t),
            t
        },
        this.bigIntToMinTwosComplementsHex = function(e) {
            var n = e.toString(16);
            if ("-" != n.substr(0, 1)) n.length % 2 == 1 ? n = "0" + n : n.match(/^[0-7]/) || (n = "00" + n);
            else {
                var i = n.substr(1),
                    s = i.length;
                s % 2 == 1 ? s += 1 : n.match(/^[0-7]/) || (s += 2);
                for (var o = "", r = 0; s &gt; r; r++)
                o += "f";
                var a = new t(o, 16),
                    c = a.xor(e).add(t.ONE);
                n = c.toString(16).replace(/^-/, "")
            }
            return n
        },
        this.getPEMStringFromHex = function(e, t) {
            var n = CryptoJS.enc.Hex.parse(e),
                i = CryptoJS.enc.Base64.stringify(n),
                s = i.replace(/(.{64})/g, "$1\r\n");
            return s = s.replace(/\r\n$/, ""),
                "-----BEGIN " + t + "-----\r\n" + s + "\r\n-----END " + t + "-----\r\n"
        }
    },
    KJUR.asn1.ASN1Object = function() {
        var e = "";
        this.getLengthHexFromValue = function() {
            if ("undefined" == typeof this.hV || null == this.hV) throw "this.hV is null or undefined.";
            if (this.hV.length % 2 == 1) throw "value hex must be even length: n=" + e.length + ",v=" + this.hV;
            var t = this.hV.length / 2,
                n = t.toString(16);
            if (n.length % 2 == 1 &amp;&amp; (n = "0" + n),
            128 &gt; t) return n;
            var i = n.length / 2;
            if (i &gt; 15) throw "ASN.1 length too long to represent by 8x: n = " + t.toString(16);
            var s = 128 + i;
            return s.toString(16) + n
        },
        this.getEncodedHex = function() {
            return (null == this.hTLV || this.isModified) &amp;&amp; (this.hV = this.getFreshValueHex(),
            this.hL = this.getLengthHexFromValue(),
            this.hTLV = this.hT + this.hL + this.hV,
            this.isModified = !1),
            this.hTLV
        },
        this.getValueHex = function() {
            return this.getEncodedHex(),
            this.hV
        },
        this.getFreshValueHex = function() {
            return ""
        }
    },
    KJUR.asn1.DERAbstractString = function(e) {
        KJUR.asn1.DERAbstractString.superclass.constructor.call(this),
        this.getString = function() {
            return this.s
        },
        this.setString = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.s = e,
            this.hV = stohex(this.s)
        },
        this.setStringHex = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.s = null,
            this.hV = e
        },
        this.getFreshValueHex = function() {
            return this.hV
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.str ? this.setString(e.str) : "undefined" != typeof e.hex &amp;&amp; this.setStringHex(e.hex))
    },
    Wn.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERAbstractTime = function() {
        KJUR.asn1.DERAbstractTime.superclass.constructor.call(this),
        this.localDateToUTC = function(e) {
            utc = e.getTime() + 6e4 * e.getTimezoneOffset();
            var t = new Date(utc);
            return t
        },
        this.formatDate = function(e, t) {
            var n = this.zeroPadding,
                i = this.localDateToUTC(e),
                s = String(i.getFullYear());
            "utc" == t &amp;&amp; (s = s.substr(2, 2));
            var o = n(String(i.getMonth() + 1), 2),
                r = n(String(i.getDate()), 2),
                a = n(String(i.getHours()), 2),
                c = n(String(i.getMinutes()), 2),
                l = n(String(i.getSeconds()), 2);
            return s + o + r + a + c + l + "Z"
        },
        this.zeroPadding = function(e, t) {
            return e.length &gt;= t ? e : new Array(t - e.length + 1).join("0") + e
        },
        this.getString = function() {
            return this.s
        },
        this.setString = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.s = e,
            this.hV = stohex(this.s)
        },
        this.setByDateValue = function(e, t, n, i, s, o) {
            var r = new Date(Date.UTC(e, t - 1, n, i, s, o, 0));
            this.setByDate(r)
        },
        this.getFreshValueHex = function() {
            return this.hV
        }
    },
    Wn.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERAbstractStructured = function(e) {
        KJUR.asn1.DERAbstractString.superclass.constructor.call(this),
        this.setByASN1ObjectArray = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.asn1Array = e
        },
        this.appendASN1Object = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.asn1Array.push(e)
        },
        this.asn1Array = new Array,
            "undefined" != typeof e &amp;&amp; "undefined" != typeof e.array &amp;&amp; (this.asn1Array = e.array)
    },
    Wn.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERBoolean = function() {
        KJUR.asn1.DERBoolean.superclass.constructor.call(this),
        this.hT = "01",
        this.hTLV = "0101ff"
    },
    Wn.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERInteger = function(e) {
        KJUR.asn1.DERInteger.superclass.constructor.call(this),
        this.hT = "02",
        this.setByBigInteger = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(e)
        },
        this.setByInteger = function(e) {
            var n = new t(String(e), 10);
            this.setByBigInteger(n)
        },
        this.setValueHex = function(e) {
            this.hV = e
        },
        this.getFreshValueHex = function() {
            return this.hV
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.bigint ? this.setByBigInteger(e.bigint) : "undefined" != typeof e["int"] ? this.setByInteger(e["int"]) : "undefined" != typeof e.hex &amp;&amp; this.setValueHex(e.hex))
    },
    Wn.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERBitString = function(e) {
        KJUR.asn1.DERBitString.superclass.constructor.call(this),
        this.hT = "03",
        this.setHexValueIncludingUnusedBits = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.hV = e
        },
        this.setUnusedBitsAndHexValue = function(e, t) {
            if (0 &gt; e || e &gt; 7) throw "unused bits shall be from 0 to 7: u = " + e;
            var n = "0" + e;
            this.hTLV = null,
            this.isModified = !0,
            this.hV = n + t
        },
        this.setByBinaryString = function(e) {
            e = e.replace(/0+$/, "");
            var t = 8 - e.length % 8;
            8 == t &amp;&amp; (t = 0);
            for (var n = 0; t &gt;= n; n++)
            e += "0";
            for (var i = "", n = 0; n &lt; e.length - 1; n += 8) {
                var s = e.substr(n, 8),
                    o = parseInt(s, 2).toString(16);
                1 == o.length &amp;&amp; (o = "0" + o),
                i += o
            }
            this.hTLV = null,
            this.isModified = !0,
            this.hV = "0" + t + i
        },
        this.setByBooleanArray = function(e) {
            for (var t = "", n = 0; n &lt; e.length; n++)
            t += 1 == e[n] ? "1" : "0";
            this.setByBinaryString(t)
        },
        this.newFalseArray = function(e) {
            for (var t = new Array(e), n = 0; e &gt; n; n++)
            t[n] = !1;
            return t
        },
        this.getFreshValueHex = function() {
            return this.hV
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.hex ? this.setHexValueIncludingUnusedBits(e.hex) : "undefined" != typeof e.bin ? this.setByBinaryString(e.bin) : "undefined" != typeof e.array &amp;&amp; this.setByBooleanArray(e.array))
    },
    Wn.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object),
    KJUR.asn1.DEROctetString = function(e) {
        KJUR.asn1.DEROctetString.superclass.constructor.call(this, e),
        this.hT = "04"
    },
    Wn.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERNull = function() {
        KJUR.asn1.DERNull.superclass.constructor.call(this),
        this.hT = "05",
        this.hTLV = "0500"
    },
    Wn.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERObjectIdentifier = function(e) {
        var n = function(e) {
            var t = e.toString(16);
            return 1 == t.length &amp;&amp; (t = "0" + t),
            t
        }, i = function(e) {
            var i = "",
                s = new t(e, 10),
                o = s.toString(2),
                r = 7 - o.length % 7;
            7 == r &amp;&amp; (r = 0);
            for (var a = "", c = 0; r &gt; c; c++)
            a += "0";
            o = a + o;
            for (var c = 0; c &lt; o.length - 1; c += 7) {
                var l = o.substr(c, 7);
                c != o.length - 7 &amp;&amp; (l = "1" + l),
                i += n(parseInt(l, 2))
            }
            return i
        };
        KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this),
        this.hT = "06",
        this.setValueHex = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.s = null,
            this.hV = e
        },
        this.setValueOidString = function(e) {
            if (!e.match(/^[0-9.]+$/)) throw "malformed oid string: " + e;
            var t = "",
                s = e.split("."),
                o = 40 * parseInt(s[0]) + parseInt(s[1]);
            t += n(o),
            s.splice(0, 2);
            for (var r = 0; r &lt; s.length; r++)
            t += i(s[r]);
            this.hTLV = null,
            this.isModified = !0,
            this.s = null,
            this.hV = t
        },
        this.setValueName = function(e) {
            if ("undefined" == typeof KJUR.asn1.x509.OID.name2oidList[e]) throw "DERObjectIdentifier oidName undefined: " + e;
            var t = KJUR.asn1.x509.OID.name2oidList[e];
            this.setValueOidString(t)
        },
        this.getFreshValueHex = function() {
            return this.hV
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.oid ? this.setValueOidString(e.oid) : "undefined" != typeof e.hex ? this.setValueHex(e.hex) : "undefined" != typeof e.name &amp;&amp; this.setValueName(e.name))
    },
    Wn.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object),
    KJUR.asn1.DERUTF8String = function(e) {
        KJUR.asn1.DERUTF8String.superclass.constructor.call(this, e),
        this.hT = "0c"
    },
    Wn.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERNumericString = function(e) {
        KJUR.asn1.DERNumericString.superclass.constructor.call(this, e),
        this.hT = "12"
    },
    Wn.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERPrintableString = function(e) {
        KJUR.asn1.DERPrintableString.superclass.constructor.call(this, e),
        this.hT = "13"
    },
    Wn.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERTeletexString = function(e) {
        KJUR.asn1.DERTeletexString.superclass.constructor.call(this, e),
        this.hT = "14"
    },
    Wn.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERIA5String = function(e) {
        KJUR.asn1.DERIA5String.superclass.constructor.call(this, e),
        this.hT = "16"
    },
    Wn.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString),
    KJUR.asn1.DERUTCTime = function(e) {
        KJUR.asn1.DERUTCTime.superclass.constructor.call(this, e),
        this.hT = "17",
        this.setByDate = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.date = e,
            this.s = this.formatDate(this.date, "utc"),
            this.hV = stohex(this.s)
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.str ? this.setString(e.str) : "undefined" != typeof e.hex ? this.setStringHex(e.hex) : "undefined" != typeof e.date &amp;&amp; this.setByDate(e.date))
    },
    Wn.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime),
    KJUR.asn1.DERGeneralizedTime = function(e) {
        KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, e),
        this.hT = "18",
        this.setByDate = function(e) {
            this.hTLV = null,
            this.isModified = !0,
            this.date = e,
            this.s = this.formatDate(this.date, "gen"),
            this.hV = stohex(this.s)
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.str ? this.setString(e.str) : "undefined" != typeof e.hex ? this.setStringHex(e.hex) : "undefined" != typeof e.date &amp;&amp; this.setByDate(e.date))
    },
    Wn.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime),
    KJUR.asn1.DERSequence = function(e) {
        KJUR.asn1.DERSequence.superclass.constructor.call(this, e),
        this.hT = "30",
        this.getFreshValueHex = function() {
            for (var e = "", t = 0; t &lt; this.asn1Array.length; t++) {
                var n = this.asn1Array[t];
                e += n.getEncodedHex()
            }
            return this.hV = e,
            this.hV
        }
    },
    Wn.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured),
    KJUR.asn1.DERSet = function(e) {
        KJUR.asn1.DERSet.superclass.constructor.call(this, e),
        this.hT = "31",
        this.getFreshValueHex = function() {
            for (var e = new Array, t = 0; t &lt; this.asn1Array.length; t++) {
                var n = this.asn1Array[t];
                e.push(n.getEncodedHex())
            }
            return e.sort(),
            this.hV = e.join(""),
            this.hV
        }
    },
    Wn.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured),
    KJUR.asn1.DERTaggedObject = function(e) {
        KJUR.asn1.DERTaggedObject.superclass.constructor.call(this),
        this.hT = "a0",
        this.hV = "",
        this.isExplicit = !0,
        this.asn1Object = null,
        this.setASN1Object = function(e, t, n) {
            this.hT = t,
            this.isExplicit = e,
            this.asn1Object = n,
            this.isExplicit ? (this.hV = this.asn1Object.getEncodedHex(),
            this.hTLV = null,
            this.isModified = !0) : (this.hV = null,
            this.hTLV = n.getEncodedHex(),
            this.hTLV = this.hTLV.replace(/^../, t),
            this.isModified = !1)
        },
        this.getFreshValueHex = function() {
            return this.hV
        },
            "undefined" != typeof e &amp;&amp; ("undefined" != typeof e.tag &amp;&amp; (this.hT = e.tag),
            "undefined" != typeof e.explicit &amp;&amp; (this.isExplicit = e.explicit),
            "undefined" != typeof e.obj &amp;&amp; (this.asn1Object = e.obj,
        this.setASN1Object(this.isExplicit, this.hT, this.asn1Object)))
    },
    Wn.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object),

    function(e) {
        "use strict";
        var t, n = {};
        n.decode = function(n) {
            var i;
            if (t === e) {
                var s = "0123456789ABCDEF",
                    o = " \f\n\r	?\u2028\u2029";
                for (t = [],
                i = 0; 16 &gt; i; ++i)
                t[s.charAt(i)] = i;
                for (s = s.toLowerCase(),
                i = 10; 16 &gt; i; ++i)
                t[s.charAt(i)] = i;
                for (i = 0; i &lt; o.length; ++i)
                t[o.charAt(i)] = -1
            }
            var r = [],
                a = 0,
                c = 0;
            for (i = 0; i &lt; n.length; ++i) {
                var l = n.charAt(i);
                if ("=" == l) break;
                if (l = t[l], -1 != l) {
                    if (l === e) throw "Illegal character at offset " + i;
                    a |= l, ++c &gt;= 2 ? (r[r.length] = a,
                    a = 0,
                    c = 0) : a &lt;&lt;= 4
                }
            }
            if (c) throw "Hex encoding incomplete: 4 bits missing";
            return r
        },
        window.Hex = n
    }(),
    Hex = window.Hex,

    function(e) {
        "use strict";
        var t, n = {};
        n.decode = function(n) {
            var i;
            if (t === e) {
                var s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                    o = "= \f\n\r	?\u2028\u2029";
                for (t = [],
                i = 0; 64 &gt; i; ++i)
                t[s.charAt(i)] = i;
                for (i = 0; i &lt; o.length; ++i)
                t[o.charAt(i)] = -1
            }
            var r = [],
                a = 0,
                c = 0;
            for (i = 0; i &lt; n.length; ++i) {
                var l = n.charAt(i);
                if ("=" == l) break;
                if (l = t[l], -1 != l) {
                    if (l === e) throw "Illegal character at offset " + i;
                    a |= l, ++c &gt;= 4 ? (r[r.length] = a &gt;&gt; 16,
                    r[r.length] = a &gt;&gt; 8 &amp; 255,
                    r[r.length] = 255 &amp; a,
                    a = 0,
                    c = 0) : a &lt;&lt;= 6
                }
            }
            switch (c) {
                case 1:
                    throw "Base64 encoding incomplete: at least 2 bits missing";
                case 2:
                    r[r.length] = a &gt;&gt; 10;
                    break;
                case 3:
                    r[r.length] = a &gt;&gt; 16,
                    r[r.length] = a &gt;&gt; 8 &amp; 255
            }
            return r
        },
        n.re = /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
        n.unarmor = function(e) {
            var t = n.re.exec(e);
            if (t) if (t[1]) e = t[1];
            else {
                if (!t[2]) throw "RegExp out of sync";
                e = t[2]
            }
            return n.decode(e)
        },
        window.Base64 = n
    }(),
    Base64 = window.Base64,

    function(e) {
        "use strict";

        function t(e, n) {
            e instanceof t ? (this.enc = e.enc,
            this.pos = e.pos) : (this.enc = e,
            this.pos = n)
        }

        function n(e, t, n, i, s) {
            this.stream = e,
            this.header = t,
            this.length = n,
            this.tag = i,
            this.sub = s
        }
        var i = 100,
            s = "…",
            o = {
                tag: function(e, t) {
                    var n = document.createElement(e);
                    return n.className = t,
                    n
                },
                text: function(e) {
                    return document.createTextNode(e)
                }
            };
        t.prototype.get = function(t) {
            if (t === e &amp;&amp; (t = this.pos++),
            t &gt;= this.enc.length) throw "Requesting byte offset " + t + " on a stream of length " + this.enc.length;
            return this.enc[t]
        },
        t.prototype.hexDigits = "0123456789ABCDEF",
        t.prototype.hexByte = function(e) {
            return this.hexDigits.charAt(e &gt;&gt; 4 &amp; 15) + this.hexDigits.charAt(15 &amp; e)
        },
        t.prototype.hexDump = function(e, t, n) {
            for (var i = "", s = e; t &gt; s; ++s)
            if (i += this.hexByte(this.get(s)),
            n !== !0) switch (15 &amp; s) {
                case 7:
                    i += "  ";
                    break;
                case 15:
                    i += "\n";
                    break;
                default:
                    i += " "
            }
            return i
        },
        t.prototype.parseStringISO = function(e, t) {
            for (var n = "", i = e; t &gt; i; ++i)
            n += String.fromCharCode(this.get(i));
            return n
        },
        t.prototype.parseStringUTF = function(e, t) {
            for (var n = "", i = e; t &gt; i;) {
                var s = this.get(i++);
                n += String.fromCharCode(128 &gt; s ? s : s &gt; 191 &amp;&amp; 224 &gt; s ? (31 &amp; s) &lt;&lt; 6 | 63 &amp; this.get(i++) : (15 &amp; s) &lt;&lt; 12 | (63 &amp; this.get(i++)) &lt;&lt; 6 | 63 &amp; this.get(i++))
            }
            return n
        },
        t.prototype.parseStringBMP = function(e, t) {
            for (var n = "", i = e; t &gt; i; i += 2) {
                var s = this.get(i),
                    o = this.get(i + 1);
                n += String.fromCharCode((s &lt;&lt; 8) + o)
            }
            return n
        },
        t.prototype.reTime = /^((?:1[89]|2\d)?\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/,
        t.prototype.parseTime = function(e, t) {
            var n = this.parseStringISO(e, t),
                i = this.reTime.exec(n);
            return i ? (n = i[1] + "-" + i[2] + "-" + i[3] + " " + i[4],
            i[5] &amp;&amp; (n += ":" + i[5],
            i[6] &amp;&amp; (n += ":" + i[6],
            i[7] &amp;&amp; (n += "." + i[7]))),
            i[8] &amp;&amp; (n += " UTC",
                "Z" != i[8] &amp;&amp; (n += i[8],
            i[9] &amp;&amp; (n += ":" + i[9]))),
            n) : "Unrecognized time: " + n
        },
        t.prototype.parseInteger = function(e, t) {
            var n = t - e;
            if (n &gt; 4) {
                n &lt;&lt;= 3;
                var i = this.get(e);
                if (0 === i) n -= 8;
                else for (; 128 &gt; i;)
                i &lt;&lt;= 1, --n;
                return "(" + n + " bit)"
            }
            for (var s = 0, o = e; t &gt; o; ++o)
            s = s &lt;&lt; 8 | this.get(o);
            return s
        },
        t.prototype.parseBitString = function(e, t) {
            var n = this.get(e),
                i = (t - e - 1 &lt;&lt; 3) - n,
                s = "(" + i + " bit)";
            if (20 &gt;= i) {
                var o = n;
                s += " ";
                for (var r = t - 1; r &gt; e; --r) {
                    for (var a = this.get(r), c = o; 8 &gt; c; ++c)
                    s += a &gt;&gt; c &amp; 1 ? "1" : "0";
                    o = 0
                }
            }
            return s
        },
        t.prototype.parseOctetString = function(e, t) {
            var n = t - e,
                o = "(" + n + " byte) ";
            n &gt; i &amp;&amp; (t = e + i);
            for (var r = e; t &gt; r; ++r)
            o += this.hexByte(this.get(r));
            return n &gt; i &amp;&amp; (o += s),
            o
        },
        t.prototype.parseOID = function(e, t) {
            for (var n = "", i = 0, s = 0, o = e; t &gt; o; ++o) {
                var r = this.get(o);
                if (i = i &lt;&lt; 7 | 127 &amp; r,
                s += 7, !(128 &amp; r)) {
                    if ("" === n) {
                        var a = 80 &gt; i ? 40 &gt; i ? 0 : 1 : 2;
                        n = a + "." + (i - 40 * a)
                    } else n += "." + (s &gt;= 31 ? "bigint" : i);
                    i = s = 0
                }
            }
            return n
        },
        n.prototype.typeName = function() {
            if (this.tag === e) return "unknown";
            var t = this.tag &gt;&gt; 6,
                n = (this.tag &gt;&gt; 5 &amp; 1,
                31 &amp; this.tag);
            switch (t) {
                case 0:
                    switch (n) {
                        case 0:
                            return "EOC";
                        case 1:
                            return "BOOLEAN";
                        case 2:
                            return "INTEGER";
                        case 3:
                            return "BIT_STRING";
                        case 4:
                            return "OCTET_STRING";
                        case 5:
                            return "NULL";
                        case 6:
                            return "OBJECT_IDENTIFIER";
                        case 7:
                            return "ObjectDescriptor";
                        case 8:
                            return "EXTERNAL";
                        case 9:
                            return "REAL";
                        case 10:
                            return "ENUMERATED";
                        case 11:
                            return "EMBEDDED_PDV";
                        case 12:
                            return "UTF8String";
                        case 16:
                            return "SEQUENCE";
                        case 17:
                            return "SET";
                        case 18:
                            return "NumericString";
                        case 19:
                            return "PrintableString";
                        case 20:
                            return "TeletexString";
                        case 21:
                            return "VideotexString";
                        case 22:
                            return "IA5String";
                        case 23:
                            return "UTCTime";
                        case 24:
                            return "GeneralizedTime";
                        case 25:
                            return "GraphicString";
                        case 26:
                            return "VisibleString";
                        case 27:
                            return "GeneralString";
                        case 28:
                            return "UniversalString";
                        case 30:
                            return "BMPString";
                        default:
                            return "Universal_" + n.toString(16)
                    }
                case 1:
                    return "Application_" + n.toString(16);
                case 2:
                    return "[" + n + "]";
                case 3:
                    return "Private_" + n.toString(16)
            }
        },
        n.prototype.reSeemsASCII = /^[ -~]+$/,
        n.prototype.content = function() {
            if (this.tag === e) return null;
            var t = this.tag &gt;&gt; 6,
                n = 31 &amp; this.tag,
                o = this.posContent(),
                r = Math.abs(this.length);
            if (0 !== t) {
                if (null !== this.sub) return "(" + this.sub.length + " elem)";
                var a = this.stream.parseStringISO(o, o + Math.min(r, i));
                return this.reSeemsASCII.test(a) ? a.substring(0, 2 * i) + (a.length &gt; 2 * i ? s : "") : this.stream.parseOctetString(o, o + r)
            }
            switch (n) {
                case 1:
                    return 0 === this.stream.get(o) ? "false" : "true";
                case 2:
                    return this.stream.parseInteger(o, o + r);
                case 3:
                    return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseBitString(o, o + r);
                case 4:
                    return this.sub ? "(" + this.sub.length + " elem)" : this.stream.parseOctetString(o, o + r);
                case 6:
                    return this.stream.parseOID(o, o + r);
                case 16:
                case 17:
                    return "(" + this.sub.length + " elem)";
                case 12:
                    return this.stream.parseStringUTF(o, o + r);
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 26:
                    return this.stream.parseStringISO(o, o + r);
                case 30:
                    return this.stream.parseStringBMP(o, o + r);
                case 23:
                case 24:
                    return this.stream.parseTime(o, o + r)
            }
            return null
        },
        n.prototype.toString = function() {
            return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + (null === this.sub ? "null" : this.sub.length) + "]"
        },
        n.prototype.print = function(t) {
            if (t === e &amp;&amp; (t = ""),
            document.writeln(t + this),
            null !== this.sub) {
                t += "  ";
                for (var n = 0, i = this.sub.length; i &gt; n; ++n)
                this.sub[n].print(t)
            }
        },
        n.prototype.toPrettyString = function(t) {
            t === e &amp;&amp; (t = "");
            var n = t + this.typeName() + " @" + this.stream.pos;
            if (this.length &gt;= 0 &amp;&amp; (n += "+"),
            n += this.length,
            32 &amp; this.tag ? n += " (constructed)" : 3 != this.tag &amp;&amp; 4 != this.tag || null === this.sub || (n += " (encapsulates)"),
            n += "\n",
            null !== this.sub) {
                t += "  ";
                for (var i = 0, s = this.sub.length; s &gt; i; ++i)
                n += this.sub[i].toPrettyString(t)
            }
            return n
        },
        n.prototype.toDOM = function() {
            var e = o.tag("div", "node");
            e.asn1 = this;
            var t = o.tag("div", "head"),
                n = this.typeName().replace(/_/g, " ");
            t.innerHTML = n;
            var i = this.content();
            if (null !== i) {
                i = String(i).replace(/&lt;/g, "&amp;lt;");
                var s = o.tag("span", "preview");
                s.appendChild(o.text(i)),
                t.appendChild(s)
            }
            e.appendChild(t),
            this.node = e,
            this.head = t;
            var r = o.tag("div", "value");
            if (n = "Offset: " + this.stream.pos + "&lt;br/&gt;",
            n += "Length: " + this.header + "+",
            n += this.length &gt;= 0 ? this.length : -this.length + " (undefined)",
            32 &amp; this.tag ? n += "&lt;br/&gt;(constructed)" : 3 != this.tag &amp;&amp; 4 != this.tag || null === this.sub || (n += "&lt;br/&gt;(encapsulates)"),
            null !== i &amp;&amp; (n += "&lt;br/&gt;Value:&lt;br/&gt;&lt;b&gt;" + i + "&lt;/b&gt;",
                "object" == typeof oids &amp;&amp; 6 == this.tag)) {
                var a = oids[i];
                a &amp;&amp; (a.d &amp;&amp; (n += "&lt;br/&gt;" + a.d),
                a.c &amp;&amp; (n += "&lt;br/&gt;" + a.c),
                a.w &amp;&amp; (n += "&lt;br/&gt;(warning!)"))
            }
            r.innerHTML = n,
            e.appendChild(r);
            var c = o.tag("div", "sub");
            if (null !== this.sub) for (var l = 0, u = this.sub.length; u &gt; l; ++l)
            c.appendChild(this.sub[l].toDOM());
            return e.appendChild(c),
            t.onclick = function() {
                e.className = "node collapsed" == e.className ? "node" : "node collapsed"
            },
            e
        },
        n.prototype.posStart = function() {
            return this.stream.pos
        },
        n.prototype.posContent = function() {
            return this.stream.pos + this.header
        },
        n.prototype.posEnd = function() {
            return this.stream.pos + this.header + Math.abs(this.length)
        },
        n.prototype.fakeHover = function(e) {
            this.node.className += " hover",
            e &amp;&amp; (this.head.className += " hover")
        },
        n.prototype.fakeOut = function(e) {
            var t = / ?hover/;
            this.node.className = this.node.className.replace(t, ""),
            e &amp;&amp; (this.head.className = this.head.className.replace(t, ""))
        },
        n.prototype.toHexDOM_sub = function(e, t, n, i, s) {
            if (!(i &gt;= s)) {
                var r = o.tag("span", t);
                r.appendChild(o.text(n.hexDump(i, s))),
                e.appendChild(r)
            }
        },
        n.prototype.toHexDOM = function(t) {
            var n = o.tag("span", "hex");
            if (t === e &amp;&amp; (t = n),
            this.head.hexNode = n,
            this.head.onmouseover = function() {
                this.hexNode.className = "hexCurrent"
            },
            this.head.onmouseout = function() {
                this.hexNode.className = "hex"
            },
            n.asn1 = this,
            n.onmouseover = function() {
                var e = !t.selected;
                e &amp;&amp; (t.selected = this.asn1,
                this.className = "hexCurrent"),
                this.asn1.fakeHover(e)
            },
            n.onmouseout = function() {
                var e = t.selected == this.asn1;
                this.asn1.fakeOut(e),
                e &amp;&amp; (t.selected = null,
                this.className = "hex")
            },
            this.toHexDOM_sub(n, "tag", this.stream, this.posStart(), this.posStart() + 1),
            this.toHexDOM_sub(n, this.length &gt;= 0 ? "dlen" : "ulen", this.stream, this.posStart() + 1, this.posContent()),
            null === this.sub) n.appendChild(o.text(this.stream.hexDump(this.posContent(), this.posEnd())));
            else if (this.sub.length &gt; 0) {
                var i = this.sub[0],
                    s = this.sub[this.sub.length - 1];
                this.toHexDOM_sub(n, "intro", this.stream, this.posContent(), i.posStart());
                for (var r = 0, a = this.sub.length; a &gt; r; ++r)
                n.appendChild(this.sub[r].toHexDOM(t));
                this.toHexDOM_sub(n, "outro", this.stream, s.posEnd(), this.posEnd())
            }
            return n
        },
        n.prototype.toHexString = function() {
            return this.stream.hexDump(this.posStart(), this.posEnd(), !0)
        },
        n.decodeLength = function(e) {
            var t = e.get(),
                n = 127 &amp; t;
            if (n == t) return n;
            if (n &gt; 3) throw "Length over 24 bits not supported at position " + (e.pos - 1);
            if (0 === n) return -1;
            t = 0;
            for (var i = 0; n &gt; i; ++i)
            t = t &lt;&lt; 8 | e.get();
            return t
        },
        n.hasContent = function(e, i, s) {
            if (32 &amp; e) return !0;
            if (3 &gt; e || e &gt; 4) return !1;
            var o = new t(s);
            3 == e &amp;&amp; o.get();
            var r = o.get();
            if (r &gt;&gt; 6 &amp; 1) return !1;
            try {
                var a = n.decodeLength(o);
                return o.pos - s.pos + a == i
            } catch (c) {
                return !1
            }
        },
        n.decode = function(e) {
            e instanceof t || (e = new t(e, 0));
            var i = new t(e),
                s = e.get(),
                o = n.decodeLength(e),
                r = e.pos - i.pos,
                a = null;
            if (n.hasContent(s, o, e)) {
                var c = e.pos;
                if (3 == s &amp;&amp; e.get(),
                a = [],
                o &gt;= 0) {
                    for (var l = c + o; e.pos &lt; l;)
                    a[a.length] = n.decode(e);
                    if (e.pos != l) throw "Content size is not correct for container starting at offset " + c
                } else try {
                    for (;;) {
                        var u = n.decode(e);
                        if (0 === u.tag) break;
                        a[a.length] = u
                    }
                    o = c - e.pos
                } catch (d) {
                    throw "Exception while decoding undefined length content: " + d
                }
            } else e.pos += o;
            return new n(i, r, o, s, a)
        },
        n.test = function() {
            for (var e = [{
                value: [39],
                expected: 39
            }, {
                value: [129, 201],
                expected: 201
            }, {
                value: [131, 254, 220, 186],
                expected: 16702650
            }], i = 0, s = e.length; s &gt; i; ++i) {
                var o = new t(e[i].value, 0),
                    r = n.decodeLength(o);
                r != e[i].expected &amp;&amp; document.write("In test[" + i + "] expected " + e[i].expected + " got " + r + "\n")
            }
        },
        window.ASN1 = n
    }(),
    ASN1 = window.ASN1
    ASN1.prototype.getHexStringValue = function() {
        var e = this.toHexString(),
            t = 2 * this.header,
            n = 2 * this.length;
        return e.substr(t, n)
    },
    pn.prototype.parseKey = function(e) {
        try {
            var t = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/,
                n = t.test(e) ? Hex.decode(e) : Base64.unarmor(e),
                i = ASN1.decode(n);
            if (9 === i.sub.length) {
                var s = i.sub[1].getHexStringValue();
                this.n = un(s, 16);
                var o = i.sub[2].getHexStringValue();
                this.e = parseInt(o, 16);
                var r = i.sub[3].getHexStringValue();
                this.d = un(r, 16);
                var a = i.sub[4].getHexStringValue();
                this.p = un(a, 16);
                var c = i.sub[5].getHexStringValue();
                this.q = un(c, 16);
                var l = i.sub[6].getHexStringValue();
                this.dmp1 = un(l, 16);
                var u = i.sub[7].getHexStringValue();
                this.dmq1 = un(u, 16);
                var d = i.sub[8].getHexStringValue();
                this.coeff = un(d, 16)
            } else {
                if (2 !== i.sub.length) return !1;
                var p = i.sub[1],
                    g = p.sub[0],
                    s = g.sub[0].getHexStringValue();
                this.n = un(s, 16);
                var o = g.sub[1].getHexStringValue();
                this.e = parseInt(o, 16)
            }
            return !0
        } catch (h) {
            return !1
        }
    },
    pn.prototype.getPrivateBaseKey = function() {
        var e = {
            array: [new KJUR.asn1.DERInteger({
                "int": 0
            }), new KJUR.asn1.DERInteger({
                bigint: this.n
            }), new KJUR.asn1.DERInteger({
                "int": this.e
            }), new KJUR.asn1.DERInteger({
                bigint: this.d
            }), new KJUR.asn1.DERInteger({
                bigint: this.p
            }), new KJUR.asn1.DERInteger({
                bigint: this.q
            }), new KJUR.asn1.DERInteger({
                bigint: this.dmp1
            }), new KJUR.asn1.DERInteger({
                bigint: this.dmq1
            }), new KJUR.asn1.DERInteger({
                bigint: this.coeff
            })]
        }, t = new KJUR.asn1.DERSequence(e);
        return t.getEncodedHex()
    },
    pn.prototype.getPrivateBaseKeyB64 = function() {
        return Cn(this.getPrivateBaseKey())
    },
    pn.prototype.getPublicBaseKey = function() {
        var e = {
            array: [new KJUR.asn1.DERObjectIdentifier({
                oid: "1.2.840.113549.1.1.1"
            }), new KJUR.asn1.DERNull]
        }, t = new KJUR.asn1.DERSequence(e);
        e = {
            array: [new KJUR.asn1.DERInteger({
                bigint: this.n
            }), new KJUR.asn1.DERInteger({
                "int": this.e
            })]
        };
        var n = new KJUR.asn1.DERSequence(e);
        e = {
            hex: "00" + n.getEncodedHex()
        };
        var i = new KJUR.asn1.DERBitString(e);
        e = {
            array: [t, i]
        };
        var s = new KJUR.asn1.DERSequence(e);
        return s.getEncodedHex()
    },
    pn.prototype.getPublicBaseKeyB64 = function() {
        return Cn(this.getPublicBaseKey())
    },
    pn.prototype.wordwrap = function(e, t) {
        if (t = t || 64, !e) return e;
        var n = "(.{1," + t + "})( +|$\n?)|(.{1," + t + "})";
        return e.match(RegExp(n, "g")).join("\n")
    },
    pn.prototype.getPrivateKey = function() {
        var e = "-----BEGIN RSA PRIVATE KEY-----\n";
        return e += this.wordwrap(this.getPrivateBaseKeyB64()) + "\n",
        e += "-----END RSA PRIVATE KEY-----"
    },
    pn.prototype.getPublicKey = function() {
        var e = "-----BEGIN PUBLIC KEY-----\n";
        return e += this.wordwrap(this.getPublicBaseKeyB64()) + "\n",
        e += "-----END PUBLIC KEY-----"
    },
    pn.prototype.hasPublicKeyProperty = function(e) {
        return e = e || {},
        e.hasOwnProperty("n") &amp;&amp; e.hasOwnProperty("e")
    },
    pn.prototype.hasPrivateKeyProperty = function(e) {
        return e = e || {},
        e.hasOwnProperty("n") &amp;&amp; e.hasOwnProperty("e") &amp;&amp; e.hasOwnProperty("d") &amp;&amp; e.hasOwnProperty("p") &amp;&amp; e.hasOwnProperty("q") &amp;&amp; e.hasOwnProperty("dmp1") &amp;&amp; e.hasOwnProperty("dmq1") &amp;&amp; e.hasOwnProperty("coeff")
    },
    pn.prototype.parsePropertiesFrom = function(e) {
        this.n = e.n,
        this.e = e.e,
        e.hasOwnProperty("d") &amp;&amp; (this.d = e.d,
        this.p = e.p,
        this.q = e.q,
        this.dmp1 = e.dmp1,
        this.dmq1 = e.dmq1,
        this.coeff = e.coeff)
    };
    var Jn = function(e) {
        pn.call(this),
        e &amp;&amp; ("string" == typeof e ? this.parseKey(e) : (this.hasPrivateKeyProperty(e) || this.hasPublicKeyProperty(e)) &amp;&amp; this.parsePropertiesFrom(e))
    };
    Jn.prototype = new pn,
    Jn.prototype.constructor = Jn;
    var Gn = function(e) {
        e = e || {},
        this.default_key_size = parseInt(e.default_key_size) || 1024,
        this.default_public_exponent = e.default_public_exponent || "010001",
        this.log = e.log || !1,
        this.key = null
    };
    Gn.prototype.setKey = function(e) {
        this.log &amp;&amp; this.key &amp;&amp; console.warn("A key was already set, overriding existing."),
        this.key = new Jn(e)
    },
    Gn.prototype.setPrivateKey = function(e) {
        this.setKey(e)
    },
    Gn.prototype.setPublicKey = function(e) {
        this.setKey(e)
    },
    Gn.prototype.decrypt = function(e) {
        try {
            return this.getKey().decrypt(wn(e))
        } catch (t) {
            return !1
        }
    },
    Gn.prototype.encrypt = function(e) {
        try {
            return Cn(this.getKey().encrypt(e))
        } catch (t) {
            return !1
        }
    },
    Gn.prototype.getKey = function(e) {
        if (!this.key) {
            if (this.key = new Jn,
            e &amp;&amp; "[object Function]" === {}.toString.call(e)) return void this.key.generateAsync(this.default_key_size, this.default_public_exponent, e);
            this.key.generate(this.default_key_size, this.default_public_exponent)
        }
        return this.key
    },
    Gn.prototype.getPrivateKey = function() {
        return this.getKey().getPrivateKey()
    },
    Gn.prototype.getPrivateKeyB64 = function() {
        return this.getKey().getPrivateBaseKeyB64()
    },
    Gn.prototype.getPublicKey = function() {
        return this.getKey().getPublicKey()
    },
    Gn.prototype.getPublicKeyB64 = function() {
        return this.getKey().getPublicBaseKeyB64()
    },
    e.JSEncrypt = Gn
}(passport.lib.RSAExport),
passport.lib.RSA = passport.lib.RSAExport.JSEncrypt;</value>
  </data>
</root>